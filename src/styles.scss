@use 'sass:math';

/* Global styles */
html, body {
  height: 100%;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: #1a1a1a;
  color: white;
  position: relative;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

// Material overrides
.mat-mdc-card {
  position: relative;
  z-index: 2;
  background-color: rgba(42, 42, 42, 0.7) !important;
  color: white !important;
  backdrop-filter: blur(10px);
}

.mat-mdc-form-field {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 4px;
}

.mat-mdc-form-field-flex {
  background: transparent !important;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: transparent !important;
}

.mat-mdc-form-field-focus-overlay {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

// Main content
.main-content {
  position: relative;
  z-index: 2;
}

// Neural network background animation
.neural-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  pointer-events: none;
  z-index: 1;
  overflow: hidden;
  opacity: 0.4;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 30% 30%, rgba(0, 195, 255, 0.1) 0%, transparent 70%),
      radial-gradient(circle at 70% 70%, rgba(0, 255, 195, 0.1) 0%, transparent 70%);
    z-index: 1;
  }

  .neural-particle {
    position: absolute;
    width: 6px;
    height: 6px;
    background: rgba(0, 255, 255, 0.7);
    border-radius: 50%;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
    animation: pulse 4s infinite;

    &::after {
      content: '';
      position: absolute;
      width: 150px;
      height: 2px;
      background: linear-gradient(90deg, rgba(0, 255, 255, 0.6), transparent);
      transform-origin: left;
      animation: synapseFlash 4s infinite;
    }

    @for $i from 1 through 20 {
      $random-top: math.div(random(90), 1) * 1%;
      $random-left: math.div(random(90), 1) * 1%;
      $random-delay: math.div(random(40), 10);
      $random-duration: math.div(random(50) + 100, 10);
      
      &:nth-child(#{$i}) {
        top: $random-top;
        left: $random-left;
        animation: 
          pulse 4s infinite,
          float #{$random-duration}s infinite linear;
        animation-delay: -#{$random-delay}s;
        transform: rotate(#{random(360)}deg);

        &::after {
          animation: synapseFlash 4s infinite -#{$random-delay}s;
        }
      }
    }
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.4;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.9;
  }
  100% {
    transform: scale(1);
    opacity: 0.4;
  }
}

@keyframes synapseFlash {
  0% {
    opacity: 0;
    transform: scaleX(0.1);
  }
  50% {
    opacity: 0.9;
    transform: scaleX(1);
  }
  100% {
    opacity: 0;
    transform: scaleX(0.1);
  }
}

@keyframes float {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(60px, 60px) rotate(90deg);
  }
  50% {
    transform: translate(0, 120px) rotate(180deg);
  }
  75% {
    transform: translate(-60px, 60px) rotate(270deg);
  }
  100% {
    transform: translate(0, 0) rotate(360deg);
  }
}
